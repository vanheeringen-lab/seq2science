from snakemake.utils import validate


# complement the configuration
configfile: "config.yaml"

user_dirs = []
for key, value in config.items():
    if '_dir' in key:
        user_dirs.append(key)

if isinstance(config.get('aligner', None), str):
    config['aligner'] = {config['aligner']: {}}

for schema in ['general', 'download', 'alignment_general', 'peakcalling']:
    validate(config, schema=f"../../schemas/config/{schema}.schema.yaml")

# do onstart/onexit things
schemas = ['sample', 'assembly', 'condition']
include: f"{config['rule_dir']}/configuration.smk"


# load all the relevant rules
include: f"{config['rule_dir']}/alignment.smk"
include: f"{config['rule_dir']}/call_peak.smk"
include: f"{config['rule_dir']}/get_genome.smk"
include: f"{config['rule_dir']}/get_fastq.smk"
include: f"{config['rule_dir']}/merge_replicates.smk"
include: f"{config['rule_dir']}/qc.smk"
include: f"{config['rule_dir']}/trackhub.smk"
include: f"{config['rule_dir']}/trimming.smk"


# set the quality_control functions
quality_control = [get_trimming_qc, get_alignment_qc, get_peak_calling_qc]


rule call_peaks_all:
    """
    call peaks for each sample (or condition if applies)
    """
    input:
         expand("{result_dir}/trackhub/", **config),
         expand("{qc_dir}/multiqc_{assemblies}.html", **{**config, **{'assemblies': set(samples['assembly'])}})
