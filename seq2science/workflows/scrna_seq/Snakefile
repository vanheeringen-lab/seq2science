# do onstart/onexit things
sample_schemas = ['sample', 'assembly']
config_schemas = ['general', 'download', 'alignment_general', 'alignment_specific', 'scrna', 'trackhub']
include: "../../rules/configuration.smk"


# load all the relevant rules
include: f"{config['rule_dir']}/alignment.smk"
include: f"{config['rule_dir']}/get_fastq.smk"
include: f"{config['rule_dir']}/get_genome.smk"
include: f"{config['rule_dir']}/merge_replicates.smk"
include: f"{config['rule_dir']}/qc.smk"
include: f"{config['rule_dir']}/trimming.smk"
include: f"{config['rule_dir']}/quantification.smk"


# set the quality_control functions
quality_control = [get_trimming_qc, get_scrna_qc]

rule seq2science:
    """
    Make a QC report and map
    """
    input:
        expand(([f"{{result_dir}}/{{quantifier}}/{custom_assembly(treps.loc[trep, 'assembly'])}-{trep}/run_info.json" for trep in treps.index] if config["quantifier"] == "kallistobus" else [] +
                [f"{{result_dir}}/{{quantifier}}/{custom_assembly(treps.loc[trep, 'assembly'])}-{trep}/_tag_counts/run_report.yaml" for trep in treps.index] if config["quantifier"] == "citeseqcount" else []) +
               ([f"{{result_dir}}/seurat/{{quantifier}}/{custom_assembly(treps.loc[trep, 'assembly'])}-{trep}_seu_obj.RData" for trep in treps.index] + 
                ["{result_dir}/seurat/{quantifier}/{assemblies}_seu_merged.RData"] if config["export_seu_objects"] else []) +
               ([f"{{result_dir}}/seurat/{{quantifier}}/{custom_assembly(treps.loc[trep, 'assembly'])}-{trep}_seu_obj.RData" for trep in treps.index] +  
                [f"{{result_dir}}/sctk/{{quantifier}}/{custom_assembly(treps.loc[trep, 'assembly'])}-{trep}/seu_obj_processed.RData" for trep in treps.index] +
                ["{result_dir}/seurat/{quantifier}/{assemblies}_seu_merged.RData"] if config["run_sctk_qc"] else []) +
               (["{qc_dir}/multiqc_{assemblies}.html"] if config["create_qc_report"] else []),
               **{**config,
                  **{'assemblies': all_assemblies}})
