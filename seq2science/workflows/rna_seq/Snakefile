# do onstart/onexit things
sample_schemas = ['sample', 'assembly', 'replicate', 'strandedness']
config_schemas = ['general', 'download', 'alignment_general', 'alignment_specific', 'gene_expression', 'trackhub']
include: "../../rules/configuration.smk"


# load the remaining relevant rules
include: f"{config['rule_dir']}/alignment.smk"
include: f"{config['rule_dir']}/bam_cleaning.smk"
include: f"{config['rule_dir']}/strandedness.smk"
include: f"{config['rule_dir']}/bigfiles.smk"
include: f"{config['rule_dir']}/DGE_analysis.smk"
include: f"{config['rule_dir']}/gene_counts.smk"
include: f"{config['rule_dir']}/get_genome.smk"
include: f"{config['rule_dir']}/get_fastq.smk"
include: f"{config['rule_dir']}/merge_replicates.smk"
include: f"{config['rule_dir']}/trackhub.smk"
include: f"{config['rule_dir']}/trimming.smk"
include: f"{config['rule_dir']}/quantification.smk"
include: f"{config['rule_dir']}/qc.smk"


# load the quality control files
quality_control = [get_trimming_qc, get_alignment_qc, get_rna_qc] if config['quantifier'] != 'salmon' else [get_trimming_qc]

rule count_all:
    """
    count expressed genes per assembly and (optionally) perform differential expression analysis
    """
    input:
         expand(
             (["{result_dir}/trackhub"]              if config['create_trackhub']  else []) +
             (["{qc_dir}/multiqc_{assemblies}.html"] if config["create_qc_report"] else []) +

             (["{counts_dir}/{assemblies}-counts.tsv"]) +
             (["{counts_dir}/{assemblies}-DEXSeq_counts.tsv"] if config['dexseq'] else []) +
             (["{genome_dir}/{assemblies}/gene_id2name.tsv"]) +

             ([f"{{dge_dir}}/{{assemblies}}-{{contrasts}}.diffexp.tsv"] if config.get('contrasts', False) else []),
             **{**config, **{'assemblies': all_assemblies, 'contrasts': get_contrasts()}})
