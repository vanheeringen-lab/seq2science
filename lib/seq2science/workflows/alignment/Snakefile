# do onstart/onexit things
SAMPLE_SCHEMAS = ['sample', 'assembly', 'technical_replicates', 'strandedness']
CONFIG_SCHEMAS = ['general', 'download', 'alignment_general', 'alignment_specific', 'trackhub']
include: "../../rules/configuration.smk"


# load the remaining relevant rules
include: f"{config['rule_dir']}/get_fastq.smk"
include: f"{config['rule_dir']}/trimming.smk"
include: f"{config['rule_dir']}/merge_replicates.smk"
include: f"{config['rule_dir']}/get_genome.smk"
include: f"{config['rule_dir']}/blacklist.smk"
include: f"{config['rule_dir']}/alignment.smk"
include: f"{config['rule_dir']}/bam_cleaning.smk"
include: f"{config['rule_dir']}/bigfiles.smk"
include: f"{config['rule_dir']}/trackhub.smk"
include: f"{config['rule_dir']}/qc.smk"


# load the quality control files
QUALITY_CONTROL = [get_trimming_qc, get_alignment_qc]


rule seq2science:
    """
    align each sample against its assembly
    """
    input:
         expand(
             ([f"{{final_bam_dir}}/{CUSTOM_ASSEMBLIES[treps.loc[trep, 'assembly']]}-{trep}.{{bam_sorter}}-{{bam_sort_order}}.{{b}}am" for trep in treps.index]) +
             (["{trackhub_dir}"]                     if config['create_trackhub'] else []) +
             (["{qc_dir}/multiqc_{assemblies}.html"] if config["create_qc_report"] else []),
             assemblies=ALL_ASSEMBLIES, b="cr" if config.get('cram_no_bam') else "b", **config)
